@model _3M.Comodato.Front.Models.OsPadrao
@using GridMvc.Html

@{
    ViewBag.Title = "Agenda de Atendimento - Ordem de Serviço";
    var perfil = (_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"];
    int PERFIL_CLIENTE = 8;
    var UsuarioTecnico = _3M.Comodato.Utility.ControlesUtility.Seguranca.VerificaUsuarioPerfisTecnicos(Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).usuario.nidUsuario));
}
<i class="fas fa-cubes fa-3x fa-pull-left"></i>
<h3>Agenda de Atendimento - Ordem de Serviço</h3>
<div class="well">
    @using (Html.BeginForm())
    {
        <div class="form-horizontal">
            <hr />
            @Html.HiddenFor(model => model.idKey)
            <div class="card-group">
                <div class="card">
                    <div class="card-body">
                        <div class="form-group row">
                            <div class="form-group col-md-6 col-sm-12 font-weight-bold">
                                @Html.LabelFor(model => model.ID_OS, $"Ordem de Serviço: #{Model.ID_OS.ToString()}", new { @class = "control-label m-2" })
                            </div>
                            <label for="TpStatusOS_DS_STATUS_OS" class="col-form-label">Status</label>
                            <div class="col-sm-5 col-sm-5">
                                @Html.EditorFor(model => model.TpStatusOS.DS_STATUS_OS, new { htmlAttributes = new { @class = "form-control", @id = "TpStatusOS_DS_STATUS_OS", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                <label class="control-label">Técnico</label>
                                @Html.DropDownListFor(model => model.tecnico.CD_TECNICO, new SelectList(Model.tecnicos, "CD_TECNICO", "NM_TECNICO"), "Selecione...", new { @class = "js-example-basic-single form-control col-12", @style = "width: 100%" })
                                @Html.EditorFor(model => model.CodigoTecnico, new { htmlAttributes = new { @class = "form-control col-12", @readonly = "readonly" } })
                            </div>
                            <div class="form-group col-md-6 col-sm-12">
                                <label class="control-label">Empresa</label>
                                @Html.EditorFor(model => model.tecnico.empresa.NM_Empresa, new { htmlAttributes = new { @class = "form-control col-12", @readonly = "readonly" } })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-12 col-sm-12">
                                <label class="control-label">Cliente</label>
                                @Html.DropDownListFor(model => model.cliente.CD_CLIENTE, new SelectList(Model.clientes, "CD_CLIENTE", "NM_CLIENTE", "CD_TECNICO"), "Selecione...", new { @class = "js-example-basic-single form-control col-12", @style = "width: 100%" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-12 col-sm-12">
                                <label class="control-label">Ativo</label>
                                @Html.DropDownListFor(model => model.ativoFixo.CD_ATIVO_FIXO, new SelectList(Model.ativos, "CD_ATIVO_FIXO", "DS_ATIVO_FIXO"), new { @class = "js-example-basic-single form-control col-12", @style = "width: 100%" })
                                <label id="validaAtivo" class="control-label text-danger" style="display: none;">Ativo inválido ou não informado!</label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="card">
                    <div class="card-body">
                        <div class="form-row">
                            <div class="form-group col-md-6 col-sm-12">
                                <label class="control-label">Tipo da OS</label>
                                @if (perfil.perfil.ccdPerfil != PERFIL_CLIENTE)
                                {
                                    @Html.DropDownListFor(model => model.TpOS.CD_TIPO_OS, new SelectList(Model.tiposOsPadrao, "CD_TIPO_OS", "DS_TIPO_OS"), "Selecione...", new { @class = "valid form-control col-12" })
                                }
                                else
                                {
                                    @Html.DropDownListFor(model => model.TpOS.CD_TIPO_OS, new SelectList(Model.tiposOsPadrao, "CD_TIPO_OS", "DS_TIPO_OS"), "Selecione...", new { @class = "valid form-control col-12", @readonly = "readonly" })
                                }
                                <label id="validaTpOS" class="control-label text-danger" style="display: none;">Conteúdo obrigatório!</label>
                            </div>
                        </div>

                        @if (perfil.perfil.ccdPerfil != PERFIL_CLIENTE)
                        {
                            <div class="form-row align-items-end">
                                <div class="form-group mb-2 col-6 col-md-4 col-sm-5">
                                    <label class="control-label">Data Visita</label>
                                    <div id="DT_DATA_OS-container">
                                        <div class="input-daterange input-group">
                                            @Html.TextBoxFor(model => model.DT_DATA_OS, "{0:dd/MM/yyyy}", new { @class = "form-control col-12", autocomplete = "off" })
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.DT_DATA_OS, "", new { @class = "text-danger" })
                                </div>
                                <div>
                                    <a href="#" onclick='IniciarVisita()' id="btnIniciar" class="btn btn-secondary m-2">
                                        <span><span class="fas fa-clock fa-lg"></span> Iniciar</span>
                                    </a>
                                    <a href="#" onclick='PararVisita()' id="btnParar" class="btn btn-secondary m-2">
                                        <span><span class="fas fa-clock fa-lg"></span> Parar</span>
                                    </a>
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group col-4 col-md-3">
                                    <label class="control-label">Hora Início</label>
                                    @Html.EditorFor(model => model.HR_INICIO, new { htmlAttributes = new { @class = "form-control col-12 text-center", type = "time" } })
                                </div>
                                <div class="form-group col-3">
                                    <label class="control-label">Hora Término</label>
                                    @Html.EditorFor(model => model.HR_FIM, new { htmlAttributes = new { @class = "form-control col-12 text-center", type = "time" } })
                                </div>
                            </div>

                            <div class="form-row">
                                <div class="form-group col-md-5">
                                    <label class="control-label">Duração do Atendimento</label>
                                    @Html.EditorFor(model => model.HR_TOTAL, new { htmlAttributes = new { @class = "form-control col-7 text-center font-weight-bold", @readonly = "readonly" } })
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <br />

            <div class="form-group">
                <label class="control-label">Acompanhamento OS</label>
                @Html.EditorFor(model => model.DS_RESPONSAVEL, new { htmlAttributes = new { @class = "form-control col-12", @rows = 1 } })
                @Html.ValidationMessageFor(model => model.DS_RESPONSAVEL, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Email</label>
                @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control col-12", @rows = 1 } })
                @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <label class="control-label">Nome da linha</label>
                @Html.EditorFor(model => model.NOME_LINHA, new { htmlAttributes = new { @class = "form-control col-12", @rows = 1 } })
                @Html.ValidationMessageFor(model => model.NOME_LINHA, "", new { @class = "text-danger" })
            </div>

            <br />

            <div class="form-group">
                <label class="control-label">Observação da OS</label>
                @Html.EditorFor(model => model.DS_OBSERVACAO, new { htmlAttributes = new { @class = "form-control col-12", @rows = 3 } })
                @Html.ValidationMessageFor(model => model.DS_OBSERVACAO, "", new { @class = "text-danger" })
            </div>

            <br />
            <div class="form-group">
                @if (perfil.perfil.ccdPerfil != PERFIL_CLIENTE)
                {
                    <input type="submit" value="Gravar" id="btnGravar" class="btn btn-primary btn-sm" />
                }

                @Html.ActionLink("Voltar", "Index", new { area = "" }, new { @class = "btn btn-primary btn-sm" })
            </div>
        </div>
    }
</div>


@section Scripts {
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script src="~/Scripts/jquery-3.6.0.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.moneymask.js"></script>
    <script src="~/Scripts/jquery.mask.js"></script>
    <script src="~/Scripts/jquery.cookie.js"></script>
    <script src="~/Scripts/jquery.freezeheader.js"></script>
    <script src="~/Scripts/jquery.freezeheader-Dash.js"></script>
    <script src="~/Scripts/bootstrap.js"></script>
    <script src="~/Scripts/select2.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/locales/bootstrap-datepicker.pt-BR.min.js"></script>

    @Scripts.Render("~/bundles/bootstrap")

    <script>
            var URLPermiteIncluirOsSalvar = "@Url.Action("ValidarPermiteIncluirOsSalvar", "OsPadrao")";
            var URLAPI = "@_3M.Comodato.Utility.ControlesUtility.Parametro.ObterValorParametro(_3M.Comodato.Utility.ControlesUtility.Constantes.URLAPI)";
            var nidUsuario = @Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).usuario.nidUsuario);
            var nidPerfil = @Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).perfil.nidPerfil);
            var perfilCliente = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.Perfil.Cliente);
            var UsuarioTecnico = '@_3M.Comodato.Utility.ControlesUtility.Seguranca.VerificaUsuarioPerfisTecnicos(Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).usuario.nidUsuario))';
            var perfilLiderEmpresaTecnica = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.Perfil.LiderEmpresaTecnica);

            var statusIniciar = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusOSPadrao.AguardandoInicio);
            var statusAberta = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusOSPadrao.Aberta);
            var statusFinalizada = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusOSPadrao.Finalizada);
            var statusCancelada = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusOSPadrao.Cancelada);
            var token = "@Convert.ToString(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).token)";
            var MensagemGravacaoSucesso = "@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemGravacaoSucesso";
            var MensagemExclusaoSucesso = "@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemExclusaoSucesso";
            var MansagemExisteOSouVisita = "@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemOSVisitaExistente";
    </script>

    <script type="text/javascript" src="~/Scripts/Comodato/Util.js"></script>
    <script type="text/javascript" src="~/Scripts/Comodato/Os.js"></script>

    <script type="text/javascript">
             @Model.JavaScriptToRun

            function MensagemSucessoAguardandoInicio() {
                var mensagem = '@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemGravacaoSucesso';
                AlertaRedirect("Aviso", mensagem, "window.location = '../OsPadrao';");
            };

            function MensagemSucessoOsAberta() {
                var mensagem = '@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemGravacaoSucesso';

                AlertaRedirect("Aviso", mensagem);
                window.location = '../OsPadrao/Editar?idKey=@Model.idKey';
                $("#loader").css("display", "none");
            };
            function MensagemJaExiste() {
                var mensagem = '@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemOSVisitaExistente';

                AlertaRedirect("Aviso", mensagem);
            };
            function MensagemAtivo() {
                var mensagem = '@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemAtivo';
                $("#ativoFixo_CD_ATIVO_FIXO").val(null);
                AlertaRedirect("Aviso", mensagem);
            };
    </script>
}

