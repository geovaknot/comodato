@model _3M.Comodato.Front.Models.WfPedidoEnvioEquipamento

<i class="fas fa-cubes fa-3x fa-pull-left"></i>
<h3>@ViewBag.Title</h3>
<div class="form-group row h3">
    @*@Html.EditorFor(model => model.TituloPagina, new { htmlAttributes = new { @class = "form-control-plaintext col-11", @readonly = "readonly" } })*@
</div>

@if (Convert.ToInt32(Model.ST_STATUS_PEDIDO) == 1)
{
    <div class="pre-scrollable">
        <div id="gridmvcMensagem">
        </div>
    </div>
}

<div class="well">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal container-fluid">
            <hr />
            @Html.HiddenFor(model => model.ID_WF_PEDIDO_EQUIP)
            @Html.HiddenFor(model => model.CD_WF_PEDIDO_EQUIP)
            @Html.HiddenFor(model => model.ST_STATUS_PEDIDO)

            <div class="form-control">
                <div class="form-row">
                    <div class="form-group col-md-6 text-left">
                        <label id="CD_WF_PEDIDO_EQUIP" class="control-label" style="font-weight: bold;">Número do Documento: #@Model.CD_WF_PEDIDO_EQUIP</label>

                    </div>
                    <div class="form-group col-md-6 text-right">
                        <label id="DT_PEDIDO" class="control-label" style="font-weight: bold;">Data do Pedido: @Model.DT_PEDIDO</label>
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12 col-sm-12">
                        <label class="control-label">Nome do Emitente</label>
                        @Html.TextBoxFor(model => model.NM_EMITENTE, new { @class = "form-control col-md-12", @readonly = "readonly" })
                        @Html.HiddenFor(model => model.ID_USU_EMITENTE)
                    </div>
                </div>

                <div class="form-row">
                    <div class="form-group col-md-12 col-sm-12">
                        <label class="control-label">Título</label>
                        @Html.TextBoxFor(model => model.DS_TITULO, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly", @maxlength = "250" } : (object)new { @class = "form-control col-md-12", @maxlength = "250" })
                    </div>
                </div>

                <!-- Solicitante -->
                <div class="card">
                    <div class="card-header">
                        <label class="control-label">Dados do Solicitante</label>
                    </div>
                    <div class="card-body">
                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <label class="control-label">Nome do Solicitante/Vendendor</label>
                                @Html.DropDownListFor(model => model.ID_USU_SOLICITANTE, Model.ListaVendedor, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />

                <!-- Cliente -->
                <div class="card">
                    <div class="card-header">
                        <label class="control-label">Dados do Cliente</label>
                    </div>
                    <div class="card-body">
                        @*<div class="form-row">
                                <div class="form-group col-md-3">
                                    <label class="control-label">Código</label>
                                    @Html.EditorFor(model => model.CD_CLIENTE, new { htmlAttributes = new { @class = "form-control col-12" } })
                                    @Html.ValidationMessageFor(model => Model.CD_CLIENTE, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="form-group">
                            <label class="control-label">Cliente</label>
                            @*@Html.TextBoxFor(model => model.CD_CLIENTE, new { @class = "form-control col-md-12" })*@
                            @Html.DropDownListFor(model => model.CD_CLIENTE, Model.ListaCliente, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            @Html.ValidationMessageFor(model => Model.CD_CLIENTE, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-8">
                                <label class="control-label">Segmento</label>
                                @*@Html.TextBoxFor(model => model.DS_SEGMENTO, new { @class = "form-control col-md-12" })*@@*, @readonly = "readonly" })*@
                                @Html.DropDownListFor(model => model.ID_SEGMENTO, Model.ListaSegmento, "Selecione...", Model.ReadOnly ? (object)new { @id = "ListaSegmento", @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @id = "ListaSegmento", @class = "form-control col-md-12" })
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label">CNPJ</label>
                                @Html.TextBoxFor(model => model.NR_CNPJ, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <label class="control-label">Razão Social</label>
                                @Html.TextBoxFor(model => model.NM_CLIENTE, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                            @*<div class="form-group col-md-4">
                                    <label class="control-label">CNPJ</label>
                                    @Html.TextBoxFor(model => model.NR_CNPJ, new { @class = "form-control col-md-12", @readonly = "readonly" })
                                </div>*@
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <label class="control-label">Endereço (Rua/Av.)</label>
                                @Html.TextBoxFor(model => model.EN_ENDERECO, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-row">
                            <div class="form-group col-md-3">
                                <label class="control-label">Bairro</label>
                                @Html.TextBoxFor(model => model.EN_BAIRRO, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                            <div class="form-group col-md-3">
                                <label class="control-label">CEP</label>
                                @Html.TextBoxFor(model => model.EN_CEP, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label">Cidade</label>
                                @Html.TextBoxFor(model => model.EN_CIDADE, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                            <div class="form-group col-md-2">
                                <label class="control-label">UF</label>
                                @Html.TextBoxFor(model => model.EN_ESTADO, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-row">
                            <!-- Contato Empresa -->
                            <div class="form-group col-md-12">
                                <div class="card">
                                    <div class="card-header">
                                        <label class="control-label">Contato</label>
                                    </div>
                                    <div class="card-body">
                                        <div class="form-row">
                                            <div class="form-group col-md-4">
                                                <label class="control-label">Nome</label>
                                                @Html.TextBoxFor(model => model.DS_CONTATO_NOME, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly", @maxlength = "100" } : (object)new { @class = "form-control col-md-12", @maxlength = "100" })
                                                @*@Html.ValidationMessageFor(model => Model.DS_CONTATO_NOME, "", new { @class = "text-danger" })*@
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label class="control-label">E-Mail</label>
                                                @Html.TextBoxFor(model => model.TX_EMAIL, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                @*@Html.ValidationMessageFor(model => Model.TX_EMAIL, "", new { @class = "text-danger" })*@
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label class="control-label">Telefone Principal</label>
                                                @Html.TextBoxFor(model => model.TX_TELEFONE, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly", @maxlength = "14" } : (object)new { @class = "form-control col-md-12", @maxlength = "14" })
                                                @*@Html.ValidationMessageFor(model => Model.TX_TELEFONE, "", new { @class = "text-danger" })*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br />

                <!-- Dados do Equipamento -->
                <div class="card">
                    <div class="card-header">
                        <label class="control-label">Dados do Equipamento</label>
                    </div>
                    <div class="card-body">

                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="control-label">Categoria</label>
                                @Html.DropDownListFor(model => model.Categoria, Model.ListaCategoria, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                            <div class="form-group col-md-6">
                                <label class="control-label">Tipo de Locação</label>
                                @Html.DropDownListFor(model => model.TipoLocacao, Model.ListaTipoLocacao, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>

                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-12">
                                <label class="control-label">Tipo de Solicitação</label>
                                @Html.DropDownListFor(model => model.TipoSolicitacao, Model.ListaTipoSolicitacao, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="control-label">Modelo</label>
                                @Html.DropDownListFor(model => model.Modelo, Model.ListaModelo, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                            <div class="form-group col-md-6">
                                <label class="control-label">Tipo Empacotamento</label>
                                @Html.DropDownListFor(model => model.Linha, Model.ListaLinha, "Selecione...", new { @class = "form-control col-md-12", @disabled = "disabled" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="control-label">Categoria-Modelo</label>
                                @Html.TextBoxFor(model => model.DescricaoCategoria, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                            <div class="form-group col-md-6">
                                <label class="control-label">Linha de Produto</label>
                                @Html.TextBoxFor(model => model.LinhaProduto, new { @class = "form-control col-md-12", @readonly = "readonly" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-3">
                                <label class="control-label">Volume/Ano</label>
                                @Html.TextBoxFor(model => model.VolumeAno, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                            <div class="form-group col-md-3">
                                <label class="control-label">Unidade de Medida</label>
                                @Html.DropDownListFor(model => model.UnidadeMedida, Model.ListaUnidadeMedida, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                        @*</div>
                        <div class="form-row">*@
                            <div class="form-group col-md-3">
                                <label class="control-label">Tensão</label>
                                @Html.DropDownListFor(model => model.Tensao, Model.ListaTensao, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                            <div class="form-group col-md-3">
                                <label class="control-label">Qtde. de Equipamento</label>
                                @Html.TextBoxFor(model => model.QuantidadeEquipamento, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                        </div>

                        <div class="form-row" id="divTipoSolicitacaoTroca">
                            <!-- Equipamento da Troca -->
                            <div class="form-group col-md-12">
                                <div class="card">
                                    <div class="card-header">
                                        <label class="control-label">Equipamento da Troca</label>
                                    </div>
                                    <div class="card-body">
                                        <div class="form-row">
                                            <div class="form-group col-md-3">
                                                <label class="control-label">Número Ativo</label>
                                                @Html.DropDownListFor(model => model.NumeroAtivoTroca, Model.ListaAtivosCliente, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                            </div>
                                            <div class="form-group col-md-3">
                                                <label class="control-label">Nota Fiscal</label>
                                                @Html.TextBoxFor(model => model.NumeroNFTroca, new { @class = "form-control col-md-12", @readonly = "readonly" })
                                            </div>
                                            <div class="form-group col-md-2">
                                                <label class="control-label">Data</label>
                                                @Html.TextBoxFor(model => model.DataNFTroca, new { @class = "form-control col-md-12", @readonly = "readonly" })
                                            </div>
                                            <div class="form-group col-md-4">
                                                <label class="control-label">Modelo</label>
                                                @Html.TextBoxFor(model => model.ModeloEquipamentoTroca, new { @class = "form-control col-md-12", @readonly = "readonly" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
                <br />

                <!-- Condições de Aplicação -->
                <div class="card">
                    <div class="card-header">
                        <label class="control-label">Condições de Aplicação</label>
                    </div>
                    <div class="card-body">
                        <div class="form-row">
                            <div class="form-group col-md-4">
                                <label class="control-label">Condições de Limpeza</label>
                                @Html.DropDownListFor(model => model.CondicaoLimpeza, Model.ListaCondicaoLimpeza, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label">Condições de Temperatura</label>
                                @Html.DropDownListFor(model => model.CondicaoTemperatura, Model.ListaCondicaoTemperatura, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                            <div class="form-group col-md-4">
                                <label class="control-label">Condições de Umidade</label>
                                @Html.DropDownListFor(model => model.CondicaoUmidade, Model.ListaCondicaoUmidade, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                            </div>
                        </div>
                    </div>
                </div>
                <br />

                <!--FECHADOR-->
                <!-- DADOS DA CAIXA-->
                @*<div id="Categoria@_3M.Comodato.Utility.ControlesUtility.Parametro.ObterValorParametro(_3M.Comodato.Utility.ControlesUtility.Constantes.WorkflowCategoriaFechador)">*@
                <div id='@String.Concat("Categoria",ViewBag.CategoriaFechador)'>
                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Tamanho padrão Medidas de Caixa</label>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-md-4">
                                    <div class="card">
                                        <div class="card-header text-center">
                                            Tamanho padrão Modelo
                                        </div>
                                        <div class="card-body">
                                            <div class="form-group col-md-12">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Altura mín. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ModeloAlturaMinima, new { @class = "form-control small", @readonly = "readonly" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Altura máx. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ModeloAlturaMaxima, new { @class = "form-control small", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Largura mín. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ModeloLarguraMinima, new { @class = "form-control small", @readonly = "readonly" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Largura máx. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ModeloLarguraMaxima, new { @class = "form-control small", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Comprimento mín. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ModeloComprimentoMinimo, new { @class = "form-control small", @readonly = "readonly" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Comprimento máx. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ModeloComprimentoMaximo, new { @class = "form-control small", @readonly = "readonly" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="form-group col-md-4">
                                    <div class="card">
                                        <div class="card-header text-center">Tamanho da sua Caixa</div>
                                        <div class="card-body">
                                            <div class="form-group col-md-12">
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Altura mín. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ValorAlturaMinima, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Altura máx. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ValorAlturaMaxima, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Largura mín. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ValorLarguraMinima, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Largura máx. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ValorLarguraMaxima, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Comprimento mín. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ComprimentoMinimo, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Comprimento máx. (mm)</label>
                                                        @Html.TextBoxFor(model => model.ComprimentoMaximo, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                </div>

                                                <div class="row">
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Peso mínimo (Kg)</label>
                                                        @Html.TextBoxFor(model => model.PesoMinimo, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                    <div class="col-md-6">
                                                        <label class="control-label small">Peso máximo (Kg)</label>
                                                        @Html.TextBoxFor(model => model.PesoMaximo, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group col-md-4">
                                    <div class="form-group col-md-12">
                                        <div class="row">
                                            <img src="~/Images/imgBoxWF.png" class="img-thumbnail" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />

                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Dados da Fita</label>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-md-4">
                                    <label class="control-label">Tipo da Fita</label>
                                    @Html.DropDownListFor(model => model.Fita, Model.ListaFita, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Impr./Lisa</label>
                                    @Html.DropDownListFor(model => model.ModeloFita, Model.ListaModeloFita, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Largura</label>
                                    @Html.DropDownListFor(model => model.LarguraFita, Model.ListaLarguraFita, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!--IDENTIFICADOR -->
                @*<div id="Categoria@_3M.Comodato.Utility.ControlesUtility.Parametro.ObterValorParametro(_3M.Comodato.Utility.ControlesUtility.Constantes.WorkflowCategoriaIdentificador)">*@
                <div id='@String.Concat("Categoria",ViewBag.CategoriaIdentificador)'>
                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Dados para Aplicadores e Impressoras</label>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <div class="form-group">
                                        <label class="control-label">Tipo do Produto</label>
                                        @Html.DropDownListFor(model => model.TipoProduto, Model.ListaTipoProduto, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Local e Instalação</label>
                                        @Html.DropDownListFor(model => model.LocalInstalacao, Model.ListaLocalInstalacao, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                    </div>
                                    <div class="form-group">
                                        <label class="control-label">Velocidade da Linha</label>
                                        @Html.DropDownListFor(model => model.VelocidadeLinha, Model.ListaVelocidadeLinha, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                    </div>

                                    <div class="form-group">
                                        <label class="control-label">Guias de Posicionamento</label>
                                        @Html.DropDownListFor(model => model.GuiaPosicionamento, Model.ListaGuiaPosicionamento, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                    </div>
                                </div>
                                <div class="form-group col-md-6">
                                    <div class="form-row">
                                        <div class="form-group col-md-1">
                                            &nbsp;
                                        </div>
                                        <div class="form-group col-md-3">
                                            <div class="row">
                                                <img src="~/Images/imgAplImpWF.png" class="img-thumbnail" />
                                            </div>
                                        </div>
                                        <div class="form-group col-md-8">
                                            <div class="form-group">
                                                <div class="form-inline">
                                                    @Html.CheckBoxFor(model => model.AplicadorDireito, Model.ReadOnly ? (object)new { @class = "form-control col-md-1", @disabled = "disabled" } : (object)new { @class = "form-control col-md-1" })
                                                    <label class="control-label">Aplicador Direito</label>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="form-inline">
                                                    @Html.CheckBoxFor(model => model.AplicadorEsquerdo, Model.ReadOnly ? (object)new { @class = "form-control col-md-1", @disabled = "disabled" } : (object)new { @class = "form-control col-md-1" })
                                                    <label class="control-label">Aplicador Esquerdo</label>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <div class="form-inline">
                                                    @Html.CheckBoxFor(model => model.AplicadorSuperior, Model.ReadOnly ? (object)new { @class = "form-control col-md-1", @disabled = "disabled" } : (object)new { @class = "form-control col-md-1" })
                                                    <label class="control-label">Aplicador Superior</label>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Dados da Etiqueta</label>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-md-4">
                                    <label class="control-label">Tipo de Etiqueta</label>
                                    @Html.DropDownListFor(model => model.Etiqueta, Model.ListaEtiqueta, "Selecione...", Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @disabled = "disabled" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Altura da Etiqueta (mm)</label>
                                    @Html.TextBoxFor(model => model.AlturaEtiqueta, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Largura da Etiqueta (mm)</label>
                                    @Html.TextBoxFor(model => model.LarguraEtiqueta, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />
                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Dados para Kit PVA</label>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-md-12">
                                    <label class="control-label">Grama/Caixa </label>
                                    @Html.TextBoxFor(model => model.PvaGramaCaixaPVA, Model.ReadOnly ? (object)new { @class = "form-control col-md-4", @readonly = "readonly" } : (object)new { @class = "form-control col-md-4" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />
                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Dados para Filme Strech</label>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-md-6">
                                    <label class="control-label">Peso do Pallet (Kg) (Peso máximo)</label>
                                    @Html.TextBoxFor(model => model.StrechPesoPallet, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label class="control-label">Altura do Pallet (m) (Altura máxima)</label>
                                    @Html.TextBoxFor(model => model.StrechAlturaPallet, Model.ReadOnly ? (object)new { @class = "form-control col-md-12", @readonly = "readonly" } : (object)new { @class = "form-control col-md-12" })
                                </div>
                            </div>
                        </div>
                    </div>

                    <br />
                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Dados para Equipamento - InkJet</label>
                        </div>
                        <div class="card-body">
                            <div class="form-row">
                                <div class="form-group col-md-12">
                                    <label class="control-label">Número de Caracteres/Caixa</label>
                                    @Html.TextBoxFor(model => model.InkjetCaracteresCaixa, Model.ReadOnly ? (object)new { @class = "form-control col-md-4", @readonly = "readonly" } : (object)new { @class = "form-control col-md-4" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id='@String.Concat("Categoria",ViewBag.CategoriaAcessorios)'>
                    <br />
                    <div class="card">
                        <div class="card-header">
                            <label class="control-label">Dados de Acessórios</label>
                        </div>
                        <div class="card-body">
                            @if (!Model.ReadOnly)
                            {
                                <div class="form-row">
                                    <div class="form-group col-md-8">
                                        <label class="control-label">Modelo Acessório</label>

                                        @*<select id="ddlModelosIdentificador" class="form-control col-md-12"></select>*@
                                        @Html.DropDownList("ddlModelosIdentificador", Model.ListaModeloIdentificador, "Selecione...", new { @class = "form-control col-md-12" })
                                    </div>
                                    <div class="form-group col-md-2">
                                        <label class="control-label">Quantidade</label>
                                        <input type="text" id="txtModeloIdQuantidade" class="form-control col-md-12" />
                                    </div>
                                    <div class="form-group col-md-2">
                                        <label class="control-label">&nbsp; </label>
                                        <input type="button" id="btnAdicionarAcessorio" value="Adicionar" class="col-md-12 btn btn-primary btn-sm" />
                                    </div>

                                </div>
                            }
                            <div class="form-row">
                                <div class="form-group col-md-12">
                                    <div id="gridAcessoriosModelo"></div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <br />
                <div class="card">
                    <div class="card-header">
                        <label class="control-label">Observações</label>
                    </div>
                    <div class="card-body">
                        <div class="form-row">
                            <div class="form-group col-md-12">
                                @Html.TextAreaFor(model => model.DS_OBSERVACAO, new { @class = "form-control col-md-12", @rows = 2 })
                            </div>
                        </div>
                    </div>
                </div>

                <br />
                <div class="card">
                    <div class="card-header">
                        <label class="control-label">Anexos</label>
                    </div>
                    <div class="card-body">
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="control-label">Título</label>
                                @Html.TextBoxFor(model => model.DS_TITULO_ANEXO, new { @class = "form-control col-md-12" })
                            </div>

                            <div class="form-group col-md-6">
                                <label class="control-label">Descrição</label>
                                @Html.TextAreaFor(model => model.DS_DESCRICAO_ANEXO, new { @class = "form-control col-md-12", @rows = 1 })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <label class="control-label">Responsável</label>
                                <text id="NomeResponsavel" class="form-control col-md-12" readonly="readonly">@Convert.ToString(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).usuario.cnmNome)</text>
                            </div>

                            <div class="form-group col-md-6">
                                <label class="control-label">Nome do Arquivo</label>
                                @Html.HiddenFor(model => model.DS_ARQUIVO)
                                <div class="custom-file">
                                    <input type="file" id="file" class="custom-file-input" onchange="SelecionarArquivo(this, $('#labelFile'), $('#btnAnexar'));">
                                    <label class="custom-file-label" id="labelFile" for="file">Selecionar Arquivo</label>
                                </div>
                            </div>
                        </div>
                        <div class="form-row" style="text-align:right">
                            <input type="button" id="btnAnexar" value="Anexar" class="btn btn-primary btn-sm" onclick="uploadAnexo()" />
                        </div>
                        <p></p><hr />
                        <div id="anexos">
                        </div>
                    </div>
                </div>

                <br />
                @if (!Model.ReadOnly)
                {
                    <div class="form-row ">
                        <div class="form-group col-md-12 text-right">
                            @if (Model.ST_STATUS_PEDIDO == (int)_3M.Comodato.Utility.ControlesUtility.Enumeradores.WorkflowPedidoEnvio.Rascunho)
                            {
                                <input type="button" id="btnSalvarRascunho" value="Salvar Rascunho" class="btn btn-primary btn-sm" />
                            }
                            <input type="button" id="btnSalvarSubmeter" value="Salvar e Submeter" class="btn btn-primary btn-sm" />
                        </div>
                    </div>
                }
            </div>
        </div>

    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    <script type="text/javascript" src="~/Scripts/Comodato/Util.js"></script>
    <script type="text/javascript" src="~/Scripts/Comodato/WorkflowPedidoEnvio.js"></script>
    <script type="text/javascript" src="~/Scripts/moment.min.js"></script>
    @Model.JavaScriptToRun

    <script type="text/javascript">
        var URLAPI = "@_3M.Comodato.Utility.ControlesUtility.Parametro.ObterValorParametro(_3M.Comodato.Utility.ControlesUtility.Constantes.URLAPI)";
        var URL_UPLOAD = '@Url.Action("Upload")';
        var actionListarAcessorios = '@Url.Action("PopularGridAcessorioModeloEnvio", "Workflow")';
        var nidUsuario = @Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).usuario.nidUsuario);
        var codigoStatusRascunho = @Convert.ToInt32(_3M.Comodato.Utility.ControlesUtility.Enumeradores.WorkflowPedidoEnvio.Rascunho);
        var codigoStatusPendenteAnexar = @Convert.ToInt32(_3M.Comodato.Utility.ControlesUtility.Enumeradores.WorkflowPedidoEnvio.PendenteAnexar);
        var codigoStatusEnvio = @Convert.ToInt32(_3M.Comodato.Utility.ControlesUtility.Enumeradores.WorkflowPedidoEnvio.AnaliseMarketing);
        var CategoriaFechador = "@ViewBag.CategoriaFechador";
        var CategoriaIdentificador = "@ViewBag.CategoriaIdentificador";
        var token = "@Convert.ToString(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).token)";
        var CategoriaAcessorios = "@ViewBag.CategoriaAcessorios";

        var TipoSolicitacaoTroca = "@ViewBag.TipoSolicitacaoTroca";
        var CodigoAtivoTroca = "@Model.NumeroAtivoTroca";

        var URLVerificarCodigo = "@Url.Action("VerificarCodigoJson", "Cliente")";

        var URLObterListaMensagem = "@Url.Action("ObterListaMensagemJson", "Workflow")";

        function MensagemSucesso() {
            var mensagem = '@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemGravacaoSucesso';
            AlertaRedirect("Aviso", mensagem, "window.location = '@Url.Action("Index", "Workflow")';");
        };

        function MensagemTroca(cdWFPedido) {
            var mensagem = "Registrado com sucesso! Foi gerado um pedido de devolução para esta troca! (#"
                        + cdWFPedido + ")";
            AlertaRedirect("Aviso", mensagem, "window.location = '@Url.Action("Index", "Workflow")';");
        };

        var idWFEnvio = @Model.ID_WF_PEDIDO_EQUIP;

    </script>
}