@model IEnumerable<_3M.Comodato.Front.Models.Contato>

@using GridMvc.Html

@{
    ViewBag.Title = "Contato";
}

<i class="fas fa-cubes fa-3x fa-pull-left"></i>
<h3>Contato</h3>

<p>
    <a class="btn btn-primary btn-sm" href="Contato/Incluir">Novo registro <i class="far fa-sticky-note"></i></a>
</p>

<div class="table table-hover">
    @Html.Grid(Model).Columns(columns =>
{
    columns.Add(foo => foo.cnmContato).Titled("NOME").Sortable(true).Filterable(true);
    columns.Add(foo => foo.empresa.NM_Empresa).Titled("EMPRESA").Sortable(true).Filterable(true);
    columns.Add(foo => foo.cliente.NM_CLIENTE).Titled("CLIENTE").Sortable(true).Filterable(true);
    //columns.Add().Titled("EMPRESA|CLIENTE").Sortable(false).Filterable(false).Encoded(false).Sanitized(false).RenderValueAs(
    //foo => foo.cliente.NM_CLIENTE.ToString() == "" ? foo.empresa.NM_Empresa.ToString() : foo.cliente.NM_CLIENTE.ToString());
    columns.Add(foo => foo.cdsCargo).Titled("CARGO").Sortable(true).Filterable(true);
    columns.Add(foo => foo.cdsAtivo).Titled("CONDIÇÃO").Sortable(true).Filterable(true);//.SetWidth(100);
    columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(30)
                .RenderValueAs(o => Html.ActionLink(" ", "Editar", new { idKey = HttpUtility.HtmlDecode(o.idKey) }, new { @class = "fas fa-pencil-alt fa-lg" }));
    columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(30)
                .RenderValueAs(o => Html.ActionLink(" ", "Excluir", new { idKey = HttpUtility.HtmlDecode(o.idKey) }, new { @class = "fas fa-trash-alt fa-lg" }));
}).WithPaging(10)
</div>


