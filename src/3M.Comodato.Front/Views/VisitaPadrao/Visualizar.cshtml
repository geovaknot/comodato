@model _3M.Comodato.Front.Models.VisitaPadrao

@using GridMvc.Html


@{
    ViewBag.Title = "Agenda de Atendimento - Visita";
    var perfil = (_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"];
    int PERFIL_CLIENTE = 8;
}

<i class="fas fa-cubes fa-3x fa-pull-left"></i>
<h3>Agenda de Atendimento - Visita</h3>

<div class="well">

    @using (Html.BeginForm())
    {
    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(model => model.idKey)
        @Html.HiddenFor(model => model.ID_VISITA)
        @Html.HiddenFor(model => model.cliente.CD_CLIENTE)
        @Html.HiddenFor(model => model.tecnico.CD_TECNICO)
        @Html.HiddenFor(model => model.TpStatusVisita.ST_STATUS_VISITA)

        <div class="card-group">
            <div class="card">
                <div class="card-body">
                    <div class="form-group row">
                        <div class="form-group col-md-6 col-sm-12 font-weight-bold">
                            @Html.LabelFor(model => model.ID_VISITA, $"Visita: #{Model.ID_VISITA.ToString()}", new { @class = "control-label m-2" })
                        </div>
                    </div>
                    <div class="form-row">

                        <div class="form-group col-md-6 col-sm-12">
                            <label class="control-label">Técnico</label>
                            @Html.EditorFor(model => model.tecnico.NM_TECNICO, new { htmlAttributes = new { @class = "form-control col-12", @readonly = "readonly" } })
                        </div>

                        <div class="form-group col-md-6 col-sm-12">
                            <label class="control-label">Empresa</label>
                            @Html.EditorFor(model => model.tecnico.empresa.NM_Empresa, new { htmlAttributes = new { @class = "form-control col-12", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label">Cliente</label>
                        @Html.EditorFor(model => model.cliente.NM_CLIENTE_Codigo, new { htmlAttributes = new { @class = "form-control col-12", @readonly = "readonly" } })
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-body">
                    <div class="form-row">
                        <div class="form-group col-md-6 col-sm-12">
                            <label class="control-label">Motivo da Visita</label>
                            @if (Model.TpStatusVisita.ST_STATUS_VISITA == 4 || Model.TpStatusVisita.ST_STATUS_VISITA == 5)
                            {
                                @Html.DropDownListFor(model => model.TpMotivoVisita.CD_MOTIVO_VISITA, new SelectList(Model.tiposMotivoVisitaPadrao, "CD_MOTIVO_VISITA", "DS_MOTIVO_VISITA"), new { @class = "valid form-control col-12", @readonly = "readonly", @disabled = true })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.TpMotivoVisita.CD_MOTIVO_VISITA, new SelectList(Model.tiposMotivoVisitaPadrao, "CD_MOTIVO_VISITA", "DS_MOTIVO_VISITA"), new { @class = "valid form-control col-12", @readonly = "readonly" })
                            }

                        </div>
                        <div class="form-group col-md-3 col-sm-12">
                            <label class="control-label">Origem</label>
                            @if (Model.Origem != null)
                            {
                                if (Model.Origem == "W")
                                {
                                    <input type="text" readonly class="form-control col-12 text-center" value="Web"/>
                                }
                                else if (Model.Origem == "A")
                                {
                                    <input type="text" readonly class="form-control col-12 text-center" value="App" />
                                }

                            }
                            else
                            {
                                    <input type="text" readonly class="form-control col-12 text-center" value="" />
                            }

                        </div>
                    </div>

                    <div class="form-row align-items-end">
                        <div class="form-group mb-2 col-6 col-md-4 col-sm-5">
                            <label class="control-label">Data Visita</label>
                            <div id="DT_DATA_VISITA-container">
                                <div class="input-group date">
                                    @Html.TextBoxFor(model => model.DT_DATA_VISITA, "{0:dd/MM/yyyy}", new { @class = "form-control col-12 text-center", @readonly = "readonly" })
                                </div>
                            </div>
                            @Html.ValidationMessageFor(model => model.DT_DATA_VISITA, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-4 col-md-3">
                            <label class="control-label">Hora Início</label>
                            @Html.EditorFor(model => model.HR_INICIO, new { htmlAttributes = new { @class = "form-control col-12 text-center", @readonly = "readonly" } })
                        </div>

                        <div class="form-group col-3">
                            <label class="control-label">Hora Término</label>
                            @Html.EditorFor(model => model.HR_FIM, new { htmlAttributes = new { @class = "form-control col-12 text-center", @readonly = "readonly" } })
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label class="control-label">Duração do Atendimento</label>
                            @Html.EditorFor(model => model.HR_TOTAL, new { htmlAttributes = new { @class = "form-control col-6 text-center font-weight-bold", @readonly = "readonly" } })
                        </div>
                        <div class="form-group m-4">
                            @if (perfil.perfil.ccdPerfil != PERFIL_CLIENTE)
                            {
                                <button class="btn btn-danger m-1" type="button" id="btnCancelar">Cancelar Visita</button>
                            }
                        </div>

                    </div>
                </div>
            </div>
        </div>
        <br />

        <div class="card-group">

            <div class="card">
                @if (perfil.perfil.ccdPerfil == PERFIL_CLIENTE)
                {
                    <div class="card-header">
                        <div class="form-row">
                            <div class="form-group col-9">
                                <h5>Peças trocadas nesta visita</h5>
                            </div>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="pre-scrollable">
                            <div class="table table-hover">
                                @Html.Grid(Model.listaPecas).Columns(columns =>
                                {
                                    columns.Add(foo => foo.CD_PECA).Titled("CÓDIGO").Sortable(false).Filterable(false);
                                    columns.Add(foo => foo.DS_PECA).Titled("DESCRIÇÃO").Sortable(false).Filterable(false);
                                    columns.Add(foo => foo.QTD_ESTOQUE).Titled("QTDE").Sortable(false).Filterable(false);
                                })
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <div class="form-group">
            ACOMPANHAMENTO VISITA
            @Html.EditorFor(model => model.DS_RESPONSAVEL, new { htmlAttributes = new { @class = "form-control col-12", @rows = 1, @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.DS_RESPONSAVEL, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            Email
            @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control col-12", @rows = 1, @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            Observações
            @Html.EditorFor(model => model.DS_OBSERVACAO, new { htmlAttributes = new { @class = "form-control col-12", @rows = 3, @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.DS_OBSERVACAO, "", new { @class = "text-danger" })
        </div>

        <br />

        <div class="form-group">
            @*@Html.ActionLink("Voltar", "Index", new { area = "" }, new { @class = "btn btn-primary btn-sm" })*@
            <button class="btn btn-primary btn-sm" type="button" onclick="ReturnPage()">Voltar</button>
        </div>
        <script>
            function ReturnPage() {
                history.back();
            }
        </script>

    </div>

        @Html.Partial("_modalHistoricoVisita")
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var URLCancelar = "@Url.Action("Cancelar", "VisitaPadrao")";
        var URLAPI = "@_3M.Comodato.Utility.ControlesUtility.Parametro.ObterValorParametro(_3M.Comodato.Utility.ControlesUtility.Constantes.URLAPI)";   @*"@ViewBag.URLAPI";*@
        var nidUsuario = @Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).usuario.nidUsuario);  @*@ViewBag.nidUsuario;*@
        var nidPerfil = @Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).perfil.nidPerfil);
        var perfilCliente = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.Perfil.Cliente);
        var UsuarioTecnico = '@_3M.Comodato.Utility.ControlesUtility.Seguranca.VerificaUsuarioPerfisTecnicos(Convert.ToInt64(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).usuario.nidUsuario))';
        var perfilLiderEmpresaTecnica = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.Perfil.LiderEmpresaTecnica);

        var statusIniciar = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusVisitaPadrao.Iniciar);
        var statusAberta = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusVisitaPadrao.Aberta);
        var statusFinalizada = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusVisitaPadrao.Finalizada);
        var statusCancelada = @Convert.ToInt64(_3M.Comodato.Utility.ControlesUtility.Enumeradores.TpStatusVisitaPadrao.Cancelada);
        var MensagemGravacaoSucesso = "@_3M.Comodato.Utility.ControlesUtility.Constantes.MensagemGravacaoSucesso";
        var token = "@Convert.ToString(((_3M.Comodato.Entity.UsuarioPerfilEntity)Session["_CurrentUser"]).token)";
    </script>

    <script type="text/javascript" src="~/Scripts/Comodato/Util.js"></script>
    <script type="text/javascript" src="~/Scripts/Comodato/Visita.js"></script>
}

