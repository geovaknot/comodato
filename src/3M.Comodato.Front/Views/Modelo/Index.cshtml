@model IEnumerable<_3M.Comodato.Front.Models.Modelo>

@using GridMvc.Html

@{
    ViewBag.Title = "Modelo";
}

<i class="fas fa-cubes fa-3x fa-pull-left"></i>
<h3>Modelo</h3>

<p>
    <a class="btn btn-primary btn-sm" href="Modelo/Incluir">Novo registro <i class="far fa-sticky-note"></i></a>
</p>

<div class="table table-hover">
    @Html.Grid(Model).Columns(columns =>

{
    columns.Add(foo => foo.CD_MODELO).Titled("CÓDIGO").Sortable(true).Filterable(true);
    columns.Add(foo => foo.DS_MODELO).Titled("DESCRIÇÃO").Sortable(true).Filterable(true);
    columns.Add(foo => foo.grupoModelo.DS_GRUPO_MODELO).Titled("GRUPO").Sortable(true).Filterable(true);
    columns.Add(foo => foo.cdsFL_ATIVO).Titled("CONDIÇÃO").Sortable(true).Filterable(true);
    columns.Add(foo => foo.VL_COMPLEXIDADE_EQUIP).Titled("COMPLEXIDADE").Sortable(true).Filterable(true);
    columns.Add(foo => foo.VL_PROJETADO).Titled("PROJETADO").Sortable(true).Filterable(true);
    columns.Add()
                    .Encoded(false)
                    .Sanitized(false)
                    .SetWidth(30)
                    .RenderValueAs(o => Html.ActionLink(" ", "Editar", new { idKey = HttpUtility.HtmlDecode(o.idKey) }, new { @class = "fas fa-pencil-alt fa-lg" }));
    //columns.Add()
    //                .Encoded(false)
    //                .Sanitized(false)
    //                .SetWidth(30)
    //                .RenderValueAs(o => Html.ActionLink(" ", "Excluir", new { idKey = HttpUtility.HtmlDecode(o.idKey) }, new { @class = "fas fa-trash-alt fa-lg" }));
}).WithPaging(10)
</div>