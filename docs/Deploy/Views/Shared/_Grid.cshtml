@using GridMvc.Columns
@model GridMvc.IGrid
@if (Model == null) { return; }
@if (Model.RenderOptions.RenderRowsOnly)
{
    @RenderGridBody();
}
else
{
    <div class="grid-mvc" data-lang="@Model.Language" data-gridname="" data-selectable="@Model.RenderOptions.Selectable.ToString().ToLower()" data-multiplefilters="@Model.RenderOptions.AllowMultipleFilters.ToString().ToLower()">
        <div class="grid-wrap">
            @* WABR caso não queira utilizar o padrão de linha com e sem fundo cinza, passar true para essa ViewBag *@
            @if (ViewBag.gridMVCStyle_NoTableStriped == true)
            {
                <table class="table grid-table">
                    @* Draw grid header *@
                    <thead>
                        @RenderGridHeader()
                    </thead>
                    <tbody>
                        @RenderGridBody()
                    </tbody>
                </table>
            }
            else
            {
                <table class="table table-striped grid-table" id="@Model.RenderOptions.GridName">
                    @* Draw grid header *@
                    <thead>
                        @RenderGridHeader()
                    </thead>
                    <tbody>
                        @RenderGridBody()
                    </tbody>
                </table>
            }
            @RenderGridPager()
        </div>
    </div>
}
@helper RenderGridBody()
    {
        if (!Model.ItemsToDisplay.Any())
        {
            <tr class="grid-empty-text">
                <td colspan="@Model.Columns.Count()">
                    @*@Model.EmptyGridText*@
                    Nenhum registro para exibir...
                </td>
            </tr>
        }
        else
        {
            foreach (object item in Model.ItemsToDisplay)
            {
                <tr class="grid-row @Model.GetRowCssClasses(item)">
                    @foreach (IGridColumn column in Model.Columns)
                    {
                        @column.CellRenderer.Render(column, column.GetCell(item))
                    }
                </tr>
            }
        }
}
@helper RenderGridHeader()
    {
        <tr>
            @foreach (IGridColumn column in Model.Columns)
            {
                @column.HeaderRenderer.Render(column)
            }
        </tr>
}
@helper RenderGridPager()
    {
        if (Model.EnablePaging && Model.Pager != null)
        {
            <div class="grid-footer">
                @Html.Partial(Model.Pager.TemplateName, Model.Pager)
            </div>
        }
}
<script>
    try {
        (function ($) {
            var self = this;
            this.currentPage = 1;

            $(".page-link").on("click", function (event) {
                event.preventDefault();
                self.proximaPagina(this);
                return false;
            });

            $('a', '.grid-header-title').on('click', function (event) {
                event.preventDefault();
                self.efetuarConsulta(this);
                return false;
            });

            this.proximaPagina = function (e) {
                self.currentPage++;
                self.efetuarConsulta(e);
            };

            this.efetuarConsulta = function (e) {
                var urlAction = localStorage.getItem("action") + $(e).attr('href');
                var jsonData = localStorage.getItem("jsonData");
                var gridContainer = localStorage.getItem("container");

                $.ajax({
                    type: 'POST',
                    url: urlAction,
                    data: jsonData,
                    dataType: 'json',
                    cache: false,
                    contentType: 'application/json',
                    beforeSend: function () {
                        $("#loader").css("display", "block");
                    },
                    complete: function () {
                        $("#loader").css("display", "none");
                    },
                    success: function (data) {
                        if (data.Status == 'Success') {
                            $('#' + gridContainer).html(data.Html);
                            $(".grid-mvc").gridmvc();
                        }
                    },
                    error: function (res) {
                        Alerta("ERRO", res.responseText);
                    }
                });
            };

        })(jQuery);

    }
    catch (err) {
        console.log(err.message + ' - Página sem scripts referenciados.');
    }
            </script>