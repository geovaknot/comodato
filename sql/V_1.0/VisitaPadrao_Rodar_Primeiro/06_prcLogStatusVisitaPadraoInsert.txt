SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[prcLogStatusVisitaPadraoInsert]
	@p_ID_VISITA					BIGINT			= NULL,
	@p_DT_DATA_LOG_VISITA			DATETIME		= NULL,	
	@p_ST_STATUS_VISITA				INT				= NULL,
	@p_nidUsuarioAtualizacao		NUMERIC(18,0)	= NULL,
	@p_ID_LOG_STATUS_VISITA			BIGINT			OUTPUT
	
AS
BEGIN

	-- Declaração de Variáveis
	DECLARE @cdsErrorMessage	NVARCHAR(4000),
			@nidErrorSeverity	INT,
			@nidErrorState		INT,
			@nidLog				NUMERIC(18,0)

	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	BEGIN TRY

		BEGIN TRANSACTION

		INSERT INTO dbo.tbLogStatusVisitaPadrao
		        ( ID_VISITA,
		          DT_DATA_LOG_VISITA,
		          ST_STATUS_VISITA,
		          nidUsuarioAtualizacao,
		          dtmDataHoraAtualizacao )
		VALUES
		        ( @p_ID_VISITA,
		          @p_DT_DATA_LOG_VISITA,
		          @p_ST_STATUS_VISITA,
		          @p_nidUsuarioAtualizacao,
		          GETDATE()
		          )

		SET @p_ID_LOG_STATUS_VISITA = @@IDENTITY

		EXECUTE dbo.prcLogGravar 
					@p_nidLog					= @nidLog,
					@p_nidUsuarioAtualizacao	= @p_nidUsuarioAtualizacao,
					@p_ccdAcao					= 'I',
					@p_cnmTabela				= 'tbLogStatusVisitaPadrao',
					@p_nidPK					= @p_ID_LOG_STATUS_VISITA,
					@p_nidLogReturn				= @nidLog OUTPUT
	
		COMMIT TRANSACTION
	
	END TRY

	BEGIN CATCH

		SELECT	@cdsErrorMessage	= ERROR_MESSAGE(),
				@nidErrorSeverity	= ERROR_SEVERITY(),
				@nidErrorState		= ERROR_STATE();

		ROLLBACK TRANSACTION

		-- Use RAISERROR inside the CATCH block to return error
		-- information about the original error that caused
		-- execution to jump to the CATCH block.
		RAISERROR (@cdsErrorMessage, -- Message text.
				   @nidErrorSeverity, -- Severity.
				   @nidErrorState -- State.
				   )

	END CATCH

END

